Each platform is expected to define a module with the following interface:

Resource(uri)
  get()
  put(obj)
  post(obj)
  del()

@sync
crypto
  generateRandomBytes(number int) -> string
  aes
    encrypt(key string, iv string, cleartext string) -> ciphertext string
    decrypt(key string, iv string, ciphertext string) -> cleartext string
  hash
    sha1(string) -> hash string
    sha256(string) -> hash string
    hmac_sha256(key string, message string) -> hash string
  base64
    encode(string) -> string
    decode(string) -> string
  base32
    encode(string) -> string
    decode(string) -> string

@sync
settings
  type builtin_object bool | int | string
  get(key string) -> builtin_object
  put(key string, value builtin_object)

@sync
notify
  syncStarted(engines Engine array)
  syncEnded(reason string)
  syncEngineStarted(engine Engine)
  syncEngineEnded(engine Engine, reason string)

@sync
timer
  setTimeout(function, int)

Platforms should also provide implementations for the local Store for each engine.
Store's interface is as follows:

  fetchSince(time) -> rec array
  storeRecords(rec array)
  getRecords(string array) -> rec array
