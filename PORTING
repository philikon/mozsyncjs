Each platform is expected to define a module with the following interface:

@async
Resource(uri)
  get() -> callback(error, result)
  put(obj) -> callback(error, result)
  post(obj) -> callback(error, result)
  del() -> callback(error, result)

result
  status -> int
  success -> bool
  toString() -> string
  getHeader(name string) -> value string

crypto
  generateRandomBytes(number int) -> string
  aes
    encrypt(key string, iv string, cleartext string) -> ciphertext string
    decrypt(key string, iv string, ciphertext string) -> cleartext string
  hash
    sha1(string) -> hash string
    sha256(string) -> hash string
    hmac_sha256(key string, message string) -> hash string
  base64
    encode(string) -> string
    decode(string) -> string
  base32
    encode(string) -> string
    decode(string) -> string

settings
  type builtin_object bool | int | string
  get(key string) -> builtin_object
  put(key string, value builtin_object)

timer
  setTimeout(function, int)

notify
  syncStarted(engines Engine array)
  syncEnded(reason string)
  syncEngineStarted(engine Engine)
  syncEngineEnded(engine Engine, reason string)

Platforms should also provide implementations for the local Store for each engine.
Store's interface is as follows:

@async
Store
  fetchSince(time) -> callback(error, rec array)
  storeRecords(rec array) -> callback(error)
  getRecords(string array) -> callback(error, rec array)
