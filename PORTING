Each platform is expected to define a module with the following interface:

Resource(uri)
  get()
  put(obj)
  post(obj)
  del()

@sync
crypto
  aes
    encrypt(key, iv, cleartext) -> ciphertext
    decrypt(key, iv, ciphertext) -> cleartext
    generateRandomBytes(number int) -> string
  hash
    sha1(string) -> string
    sha256(string) -> string
    hmac256(key, string) -> string
  base64
    encode(string) -> string
    decode(string) -> string
  base32
    encode(string) -> string
    decode(string) -> string

@sync
settings
  get(string) -> object
  put(string, object)

@sync
notify
  syncStarted(engines Engine array)
  syncEnded(reason string)
  syncEngineStarted(engine Engine)
  syncEngineEnded(engine Engine, reason string)

@sync
timer
  setTimeout(function, int)

Platforms should also provide implementations for the local Store for each engine.
Store's interface is as follows:

  fetchSince(time) -> rec array
  storeRecords(rec array)
  getRecords(string array) -> rec array
